<Window x:Class="PATH_Editor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PATH_Editor"
        mc:Ignorable="d"
        Title="PATH" Height="350" Width="525" Background="#FF455A64" WindowStartupLocation="CenterScreen" BorderThickness="0"
        Foreground="#FF3F51B5" BorderBrush="#FF3F51B5" AllowsTransparency="True" WindowStyle="None" Name="mainWondow">
    <Window.Resources>

        <SolidColorBrush x:Key="NormalBrush" Color="#FF546B76" />
        <SolidColorBrush x:Key="NormalBrushOver" Color="#FF546B76" />
        <SolidColorBrush x:Key="NormalBrushPressed" Color="#FF3B4D55" />

        <SolidColorBrush x:Key="GlyphBrush" Color="#EEE" />

        <!-- SrollViewer ScrollBar Repeat Buttons (at each end) -->
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Name="Border" Background="{StaticResource NormalBrush}" BorderThickness="0">
                            <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" 
                              Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource NormalBrushPressed}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource NormalBrushOver}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- SrollViewer ScrollBar Repeat Buttons (The part in the middle, 
        not the thumb the long area between the buttons ) -->
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <!-- ScrollViewer ScrollBar Thumb, that part that can be dragged
        up/down or left/right Buttons -->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Name="Border2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border2" Property="Background" Value="{StaticResource NormalBrushOver}" />
                            </Trigger>
                            <Trigger Property="IsDragging" Value="True">
                                <Setter TargetName="Border2" Property="Background" Value="{StaticResource NormalBrushPressed}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="18"/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" Background="#FF4A606A" />
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand"/>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0" Background="{StaticResource NormalBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>

        <!-- HorizontalScrollBar Template using the previously created Templates -->
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="18"/>
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" Background="#FF4A606A" />
                <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0" Background="{StaticResource NormalBrush}"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>

        <!-- Style for overall  ScrollBar-->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="ThumbResizeTemplate" TargetType="{x:Type Thumb}">
            <ResizeGrip Opacity="0.75"/>
        </ControlTemplate>

        <Style x:Key="ScrollViewerTemplate" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="0" />
                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Row="0" Grid.Column="1" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                            <!--<Rectangle Grid.Row="1" Grid.Column="1" Fill="Red"/>-->
                            <Thumb Template="{StaticResource ThumbResizeTemplate}" DragDelta="Thumb_DragDelta" Grid.Row="1" Grid.Column="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>
                                                
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="35"/>
            <RowDefinition Height="35"/>
            <RowDefinition Height="284*"/>
        </Grid.RowDefinitions>

        <Border MouseDown="Border_MouseDown" Grid.Row="0" Grid.ColumnSpan="2" Background="#FFFF9800">
            <Grid>
                <Grid.Resources>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#FFFF9800"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="Button.IsMouseOver" Value="True">
                                <Setter Property="Button.Background" Value="#EF6C00"/>
                            </Trigger>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter Property="Button.Background" Value="#E65100"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="120"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="34"/>
                    <ColumnDefinition Width="34"/>
                    <ColumnDefinition Width="34"/>
                </Grid.ColumnDefinitions>
                
                <Label Content="Path Editor" Grid.Column="0" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0" FontFamily="Tw Cen MT" FontSize="23" FontWeight="Bold"/>
                <Button Name="closeButton" Grid.Column="4" BorderThickness="0" Click="closeButton_Click" >
                    <Path Stroke="White" StrokeThickness="5" Stretch="Uniform" Data="M0,0 L8,8 M0,8 L8,0" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="6"/>
                </Button>
                <Button Name="maxButton" Grid.Column="3" BorderThickness="0" Click="maxButton_Click">
                    <Path Stroke="White" StrokeThickness="4" Stretch="Uniform" Data="M0,0 H8 V8 H0 V0 M0,1 H8 M0,2 H8" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="8"/>
                </Button>
                <Button Name="minButton" Grid.Column="2" BorderThickness="0" Height="35" VerticalAlignment="Bottom" Click="minButton_Click">
                    <Path Stroke="White" StrokeThickness="2" Stretch="Fill" Data="M0,8 H8 M0,7 H8 M0,6 H8" Margin="5,21,5,8" VerticalAlignment="Bottom"/>
                </Button>
                
            </Grid>
        </Border>

        <Button Content="Add"  Name="addButton" Click="addButton_Click" Grid.Row="1" Grid.Column="0" BorderThickness="0" FontSize="18" FontFamily="Tw Cen MT" Foreground="White" FontWeight="Bold">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF60C34A"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="True">
                            <Setter Property="Button.Background" Value="#FF60D34A"/>
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter Property="Button.Background" Value="#FF4AB934"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button Name="deleteButton" Content="Delete"  Click="deleteButton_Click" Grid.Row="1" Grid.Column="1" BorderThickness="0" FontFamily="Tw Cen MT" FontSize="18" Foreground="White" FontWeight="Bold">
            <Button.Style>
                <Style>
                    <Setter Property="Button.Background" Value="#FFF44336"/>
                    <Setter Property="Button.Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="True">
                            <Setter Property="Button.Background" Value="#FFF33629"/>
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter Property="Button.Background" Value="#FFD61B0E"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <ListBox  Name="listBox" Grid.Row="2" Grid.ColumnSpan="2" BorderThickness="0" Background="#FF455A64" Padding="0" 
                  Margin="0" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" 
                  SelectionMode="Single" FocusManager.FocusedElement="{Binding ElementName=ListBoxItemTextBox}">
            <ListBox.Template>
                <ControlTemplate TargetType="ListBox">
                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
                        <ScrollViewer Style="{StaticResource ScrollViewerTemplate}" Padding="{TemplateBinding Control.Padding}" Focusable="False">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </ListBox.Template>
            
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Background" Value="#FF455A64"/>
                    <Setter Property="Foreground" Value="#EEE"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Padding" Value="5,0"/>
                    <Setter Property="Height" Value="30"/>
                    <Setter Property="FontFamily"  Value="Tw Cen MT"/>
                    <Setter Property="FontSize" Value="16"/>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF506874"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#FF3D4F57"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListBox.ItemContainerStyle>
            
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBox Name="ListBoxItemTextBox" Text="{Binding Path=.}" HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                             VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Disabled" LostFocus="ListBoxItemTextBox_LostFocus"
                             MouseDoubleClick="ListBoxItemTextBox_MouseDoubleClick" Focusable="False" VerticalContentAlignment="Center" 
                             KeyDown="ListBoxItemTextBox_KeyDown" AcceptsReturn="False" AcceptsTab="False" Cursor="Arrow" >
                        <TextBox.Style>
                            <Style x:Name="styleTB" TargetType="TextBox">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Width" Value="auto"/>
                                <Setter Property="Height" Value="30"/>
                                <Setter Property="Margin" Value="0"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="BorderThickness" Value="0"/>

                                <Style.Triggers>
                                    <!--<Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FF506874"/>
                                    </Trigger>-->
                                    <Trigger Property="Control.IsFocused" Value="True">
                                        <Setter Property="Background" Value="#ff37474F"/>
                                    </Trigger>
                                </Style.Triggers>

                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

    </Grid>
    <!-- Background="#FFF44336" -->
</Window>
